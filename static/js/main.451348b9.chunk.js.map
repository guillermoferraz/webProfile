{"version":3,"sources":["myProfileGFremove.png","components/welcome.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","welcome","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","id","to","class","src","photo","className","href","target","Component","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,+C,4OCOtBC,E,uKAGb,IAAMC,EAAW,CACbC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAU,GAId,OAEI,6BAEI,yBAAKC,GAAG,eACJ,yBAAKA,GAAG,MACN,kBAAC,IAAD,CAAMC,GAAG,GAAGD,GAAG,QACb,+BACA,+BACA,+BACA,+BAJF,sBAUN,yBAAKA,GAAG,cACJ,8CACA,mDAGJ,yBAAKA,GAAG,SACJ,uBAAGA,GAAG,WAAYE,MAAM,gBACxB,0CACA,wBAAIF,GAAG,UAAP,oQAMA,wBAAIA,GAAG,UAAP,wbAMH,yBAAKA,GAAG,OACJ,+CACA,wBAAIA,GAAG,OAAP,oBACA,wBAAIA,GAAG,OAAP,8BAIL,yBAAKA,GAAG,aACH,6BACG,mFAIR,yBAAKA,GAAG,YACJ,kBAAC,IAAWP,EACP,yBAAKO,GAAG,QACL,6BAAM,uBAAGA,GAAG,OAAOE,MAAM,kBACzB,qCAGH,yBAAMF,GAAG,QACN,6BAAK,uBAAGA,GAAG,MAAME,MAAM,qBACtB,oCAGJ,yBAAMF,GAAG,QACN,6BAAK,uBAAGA,GAAG,KAAKE,MAAM,sBACrB,2CAGJ,yBAAMF,GAAG,QACN,6BAAK,uBAAGA,GAAG,QAAQE,MAAM,kBACxB,sCAGJ,yBAAMF,GAAG,QACN,6BAAK,uBAAGA,GAAG,OAAOE,MAAM,iBACvB,wCAGJ,yBAAMF,GAAG,QACN,6BAAK,uBAAGA,GAAG,MAAME,MAAM,oBACtB,oCAIJ,yBAAKF,GAAG,QACL,6BAAK,uBAAGA,GAAG,SAASE,MAAM,mBACzB,uCAGJ,yBAAKF,GAAG,QACL,6BAAK,uBAAGA,GAAG,MAAME,MAAM,gBACtB,oCAGJ,yBAAMF,GAAG,QACN,6BAAK,uBAAGA,GAAG,YAAYE,MAAM,sBAC5B,0CAIJ,yBAAMF,GAAG,QACN,6BAAK,uBAAGA,GAAG,KAAKE,MAAM,qBACrB,4DAST,iCACI,mpBAYR,yBAAKF,GAAG,aACH,6BACG,0CAIR,yBAAKA,GAAG,WACJ,yBAAKA,GAAG,QAAQG,IAAKC,MACrB,ohDAiBJ,yBAAKJ,GAAG,cACH,yBAAKK,UAAU,OACZ,wCACC,uBAAGC,KAAK,yDAAyDC,OAAO,UAAS,2BAAG,uBAAGP,GAAG,KAAKK,UAAU,6BAAxB,aAGlF,uBAAGA,UAAU,4BAA8B,2DAC3C,uBAAGA,UAAU,4BAA8B,mDAInD,yBAAKL,GAAG,iB,GA3KaQ,aCUtBC,MAZf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpB,MCInBqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.451348b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/myProfileGFremove.7f1e0f91.png\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport photo from \"../myProfileGFremove.png\";\n\nexport default class welcome extends Component {\n    render(){\n        \n        const settings = {\n            dots: true,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            autoplay: true\n        }\n    \n\n        return (\n        \n            <div>\n                \n                <div id=\"maskImgWall\">\n                    <div id=\"gf\">\n                      <Link to=\"\" id=\"link\">\n                        <span></span> \n                        <span></span> \n                        <span></span> \n                        <span></span> \n                        Guillermo Ferraz\n                      </Link>\n                    </div>\n                </div>\n\n                <div id=\"titleIndex\">\n                    <h3>Desarrollo web</h3>\n                    <h4>Frontend & Backend</h4>\n                </div>\n\n                <div id=\"wText\">\n                    <i id=\"brackets\"  class=\"fas fa-code\"></i>\n                    <h5>Hola mundo</h5>\n                    <h6 id=\"textMe\">\n                        Mi nombre es Guillermo Ferraz y soy desarrollador web backend & frontend.\n                         Me encanta mi trabajo como desarrollador, soy un amante de la informatica y de la tecnologia en general.Me gusta mucho aprender de nuevas tecnologias y nuevos metodos de desarrollo!.\n                             \n        \n                    </h6>\n                    <h6 id=\"textMe\">Me dedico al desarrollo de apps web, mobile y tambien de Escritorio. Para mi trabajo utilizo diferentes herramientas y frameworks, selecciono las herramientas a utilizar acorde a la necesidad del proyecto que voy a realizar, sin hacerme dependiente a ninguna de estas.\n\n\nMe gusta utilizar diversas herramientas  asi como tambien aprender de nuevas, personalmente creo que es importante para tener un mejor rendimiento como desarrollador.</h6>\n                 </div> \n                    \n                 <div id=\"meP\">\n                     <p>Mi pensamiento: </p>\n                     <h6 id=\"meT\">\"Nunca rendirme\"</h6>\n                     <h6 id=\"meT\">\"Nunca parar de aprender\"</h6>\n                </div>\n\n\n                <div id=\"techSkill\">\n                     <div>\n                        <h6>Conocimientos en tecnologias de programacion web.</h6>\n                     </div>\n                </div>\n\n                <div id=\"mySlider\">\n                    <Slider {...settings}>\n                         <div id=\"logs\">\n                            <div ><i id=\"html\" class=\"fab fa-html5\"></i></div>\n                            <h6>html</h6>\n                         </div>\n\n                         <div  id=\"logs\">\n                            <div><i id=\"css\" class=\"fab fa-css3-alt\"></i></div>\n                             <h6>css</h6>\n                         </div>\n\n                         <div  id=\"logs\">\n                            <div><i id=\"js\" class=\"fab fa-js-square\"></i></div>\n                             <h6>javascript</h6>\n                         </div>\n\n                         <div  id=\"logs\">\n                            <div><i id=\"react\" class=\"fab fa-react\"></i></div>\n                             <h6>react</h6>\n                         </div>\n\n                         <div  id=\"logs\">\n                            <div><i id=\"node\" class=\"fab fa-node\"></i></div>\n                             <h6>node js</h6>\n                         </div>\n                        \n                         <div  id=\"logs\">\n                            <div><i id=\"git\" class=\"fab fa-git-alt\"></i></div>\n                             <h6>git</h6>\n\n                         </div>\n\n                         <div id=\"logs\">\n                            <div><i id=\"docker\" class=\"fab fa-docker\"></i></div>\n                             <h6>docker</h6>\n                         </div>\n\n                         <div id=\"logs\">\n                            <div><i id=\"php\" class=\"fab fa-php\"></i></div>\n                             <h6>php</h6>\n                         </div>\n                            \n                         <div  id=\"logs\">\n                            <div><i id=\"bootstrap\" class=\"fab fa-bootstrap\"></i></div>\n                             <h6>bootstrap</h6>\n\n                         </div>\n\n                         <div  id=\"logs\">\n                            <div><i id=\"db\" class=\"fas fa-database\"></i></div>\n                             <h6>bases de datos sql & nosql</h6>\n                         </div>\n\n\n\n\n\n                        \n                    </Slider>\n                    <article>\n                        <p>Como anteriormente mencione , desarrollo diferentes tipos de apps y servicios, api rest , apps con conexiones a base de datos relacionales ,no relacionales o ambas. Aplicaciones CRUD , autenticaciones de usuarios , encriptado de password , passport y todo lo tipico que conllevan las aplicaciones con login , cuentas de usuarios y consumo de alguna api rest. Etc. \nUtilizo diferentes tipos de servidores de desarrollo, no tengo preferidos pero destaco a Node js por el gran potencial que este posee.\n\nOtras de las tecnologias y lenguajes que utilizo: Electron , Ionic, python, redux, ejs y handlebars como motores de plantillas.</p>\n                    </article>\n\n\n                    \n\n                </div>\n\n                \n                <div id=\"techSkill\">\n                     <div>\n                        <h6>Sobre mi</h6>\n                     </div>\n                </div>\n\n                <div id=\"aboutMe\">\n                    <img id=\"photo\" src={photo}></img>\n                    <p>\n                        Si bien como mencione anteriormente trato de no generar dependencia de un framework o lenguaje en especifico , si que tengo algunas preferencias en mi entrono de desarrollo , en las herramientas , sistema operativo ,etc.\nSiendo que no es tan importante y no deberia afectar en el resultado de nuestro trabajo quizas mas de unos cuantos nos sentimos mas comodos utilizando algun editor de codigo en especifico o S.O.\n\nEn mi caso mi sistema operativo por excelencia para trabajar es DEBIAN, de todos modos en ocasiones no tengo mas alternativa que utilizar Windows , pero me quedo con DEBIAN.\n\nEn cuanto al editor de codigo o entorno de desarrollo, es logico que si preferimos alguno en especifico es porque hemos utilizado varios, quizas esto no influya en el resultado del trabajo , pero si que es agradable sentirse comodo escribiendo codigo. Entre varios Visual Studio Code ha tomado mucha popularidad, y si que es muy bueno destacando por encima de otros editores, pero en mi caso me quedo con NEOVIM. \n\n\nAprender a utilizar NEOVIM pude no ser muy amistoso al principio, pero cuando llegamos a desenvolvernos de manera practica en NEOVIM personalmente noto la diferencia por encima de otros editores en cuanto al rendimiento. La no utilizacion del mouse aunque no parezca para muchos , me parece de suma importancia , y lo digo a nivel personal.\n\nMe fascina LINUX y el potencial del terminal o consola de LINUX. Pienso que como desarrollador es fundamental conocer y utilizar el terminal asi como conocer los comandos de linux. \n\n\n                    </p>\n                </div>  \n                \n                <div id=\"techSkillC\">\n                     <div className=\"row\">\n                        <h6>Contacto</h6>\n                         <a href=\"https://www.linkedin.com/in/guillermo-ferraz-b24b231b4\" target=\"_blank\"><p><i id=\"in\" className=\"fab fa-linkedin-in  ml-5\"></i>Linkedin</p></a>\n\n\n                        <i className=\"fas fa-envelope ml-auto\"></i><p>guillermoferrazdst@gmail.com</p>\n                        <i className=\"fas fa-phone-square-alt\"></i><p>(+598) 099 218 225</p>\n                                            </div>\n                </div>\n                \n                <div id=\"contact\">\n                    \n                </div>\n\n\n                \n            </div>\n            \n    \n        )\n    }\n\n}\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport welcome from'./components//welcome';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={welcome} />\n\n      \n\n      \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}